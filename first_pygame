# -*- coding: utf-8 -*-
# Author:Statham Ha
import pygame,sys,time,random
from pygame.locals import*

# Set up pygame
pygame.init()
mainClock = pygame.time.Clock()

# Set up the window
WINDOWWIDTH = 400
WINDOWHEIGHT = 400
windowSurface = pygame.display.set_mode((WINDOWWIDTH,WINDOWHEIGHT),0,32)
pygame.display.set_caption('Sprites and sounds')

# Set up the colours
WHITE = (255,255,255)

# Set up block data structure
player = pygame.Rect(300,100,40,40)
playerImage = pygame.image.load('player.png')
playerStretchedImage = pygame.transform.scale(playerImage,(40,40))
foodImage = pygame.image.load('cherry.png')
foods = []
for i in range(20):
    foods.append(pygame.Rect(random.randint(0,WINDOWWIDTH -20),random.randint(0,WINDOWHEIGHT -20),20,20))
foodCounter = 0
NEWFOOD = 40

# set up keyboard variables
moveLeft = False
moveRight = False
moveUp = False
moveDown = False

MOVESPEED = 6

# Set up the music
pickUpSound = pygame.mixer.Sound('pickup.wav')
pygame.mixer.music.load('background.mid')
pygame.mixer.music.play(-1,0.0)
musicPlaying = True

# Run the game loop:
while True:
    # check for the QUIT event
    for event in pygame.event.get():
        if event.type == QUIT:            
            pygame.quit()
            sys.exit()
        if event.type == KEYDOWN:
            #Change the keybord variables
            if event.key == K_LEET or event.key == k_a:                
                moveRight = False
                moveLeft = True
            if event.key == K_Right or event.key == k_d:
                moveLeft = False
                moveRight = True
            if event.key == L_UP or event.key == k_w:
                moveDown = False
                moveUp = True
            if event.key == K_Down or event.key == k_s:
                moveUp = False
                moveDown = True
        if event.type == KEYUP:
            if event.key == k_ESCAPE:
                pygame.quit()
                sys.exit()
            if event.key == K_LEET or event.key == k_a:
                moveLeft = False
            if event.key == K_Right or event.key == k_d:
                moveRight = False
            if event.key == K_UP or event.key == k_w:
                moveUp = False
            if event.key == K_DOWN or event.key == k_s:
                moveDown = Fasle
            if event.key == k_m:
                if musicPlaying:
                    pygame.mixer.music.stop()
                else:
                    pygame.mixer.music.play(-1,0.0)
                musicplaying = not musicplaying
        if event.type == MOUSEBUTTONUP:
            foods.append(pygame.Rect(event.pos[0] - 10,event.pos[1] - 10, 20, 20))
    foodCounter += 1
    if foodCounter >= NEWFOOD:
        # Add new food
        foodCounter = 0
        foods.append(pygame.Rect(random.randint(0, WINDOWWIDTH - 20), random.randint(0, WINDOWHEIGHT - 20), 20, 20))
    # move the player
    if moveDown and player.bottom < WINDOWHEIGHT:
        player.top += MOVESPEED
    if moveUp and player.top > 0:
        player.left -= MOVESPEED
    if moveRight and  player.right < WINDOWIDTH:
        player.right += MOVESPEED
    
    # Draw the block onto the surface
    windowSurface.blit(playerStrechedImage.player)
    
    # Check whether the block has intersected with any food squares
    for food in foods[:]:
        if player.clliderect(food):
            foods.remove(food)
            player = pygame.Rect(player.left,player.top,player.width + 2, player.height + 2)
            playerStrechedImage = pygame.transform.scale(playerImage,(player.width,player.height))
            if musicPlaying:
                pickUpSound.play()
    # Draw the food
    for food in foods:
        windowSurface.blit(foodImage,food)
    # Draw the window onto the screen
    pygame.display.update()
    mainClock.tick(40)
